// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseURL: `${string}://${string}` | (string & {});
};

export type AuthToken = {
    readonly token: string;
};

export type AuthTokenRequest = {
    username: string;
    password: string;
};

export type PatchedProjectRequest = {
    name?: string;
    description?: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
};

export type PatchedUserRequest = {
    /**
     * Name of User
     */
    name?: string;
};

/**
 * * `1` - Low
 * * `2` - Medium
 * * `3` - High
 * * `4` - Critical
 */
export type PriorityEnum = 1 | 2 | 3 | 4;

export type Project = {
    readonly uuid: string;
    name: string;
    description?: string;
    readonly owner: number;
    readonly owner_email: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
    readonly is_overdue: boolean;
    readonly created_at: string;
    readonly updated_at: string;
};

/**
 * Separate serializer for creation to handle owner assignment
 */
export type ProjectCreate = {
    readonly uuid: string;
    name: string;
    description?: string;
    readonly owner: number;
    readonly owner_email: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
    readonly is_overdue: boolean;
    readonly created_at: string;
    readonly updated_at: string;
};

/**
 * Separate serializer for creation to handle owner assignment
 */
export type ProjectCreateRequest = {
    name: string;
    description?: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
};

export type ProjectRequest = {
    name: string;
    description?: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
};

/**
 * * `draft` - Draft
 * * `active` - Active
 * * `completed` - Completed
 * * `archived` - Archived
 */
export type StatusEnum = 'draft' | 'active' | 'completed' | 'archived';

export type User = {
    /**
     * Name of User
     */
    name?: string;
    readonly url: string;
};

export type UserRequest = {
    /**
     * Name of User
     */
    name?: string;
};

export type ProjectWritable = {
    name: string;
    description?: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
};

/**
 * Separate serializer for creation to handle owner assignment
 */
export type ProjectCreateWritable = {
    name: string;
    description?: string;
    status?: StatusEnum;
    priority?: PriorityEnum;
    start_date?: string | null;
    due_date?: string | null;
};

export type UserWritable = {
    /**
     * Name of User
     */
    name?: string;
};

export type ApiAuthTokenCreateData = {
    body: AuthTokenRequest;
    path?: never;
    query?: never;
    url: '/api/auth-token/';
};

export type ApiAuthTokenCreateResponses = {
    200: AuthToken;
};

export type ApiAuthTokenCreateResponse = ApiAuthTokenCreateResponses[keyof ApiAuthTokenCreateResponses];

export type ApiUsersListData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/';
};

export type ApiUsersListResponses = {
    200: Array<User>;
};

export type ApiUsersListResponse = ApiUsersListResponses[keyof ApiUsersListResponses];

export type ApiUsersRetrieveData = {
    body?: never;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type ApiUsersRetrieveResponses = {
    200: User;
};

export type ApiUsersRetrieveResponse = ApiUsersRetrieveResponses[keyof ApiUsersRetrieveResponses];

export type ApiUsersPartialUpdateData = {
    body?: PatchedUserRequest;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type ApiUsersPartialUpdateResponses = {
    200: User;
};

export type ApiUsersPartialUpdateResponse = ApiUsersPartialUpdateResponses[keyof ApiUsersPartialUpdateResponses];

export type ApiUsersUpdateData = {
    body?: UserRequest;
    path: {
        /**
         * A unique integer value identifying this user.
         */
        id: number;
    };
    query?: never;
    url: '/api/users/{id}/';
};

export type ApiUsersUpdateResponses = {
    200: User;
};

export type ApiUsersUpdateResponse = ApiUsersUpdateResponses[keyof ApiUsersUpdateResponses];

export type ApiUsersMeRetrieveData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/users/me/';
};

export type ApiUsersMeRetrieveResponses = {
    200: User;
};

export type ApiUsersMeRetrieveResponse = ApiUsersMeRetrieveResponses[keyof ApiUsersMeRetrieveResponses];

export type ProjectsListData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Which field to use when ordering the results.
         */
        ordering?: string;
        /**
         * A search term.
         */
        search?: string;
        /**
         * Filter by project status
         */
        status?: 'active' | 'archived' | 'completed' | 'draft';
    };
    url: '/api/v1/projects/';
};

export type ProjectsListResponses = {
    200: Array<Project>;
};

export type ProjectsListResponse = ProjectsListResponses[keyof ProjectsListResponses];

export type ProjectsCreateData = {
    body: ProjectCreateRequest;
    path?: never;
    query?: never;
    url: '/api/v1/projects/';
};

export type ProjectsCreateResponses = {
    201: ProjectCreate;
};

export type ProjectsCreateResponse = ProjectsCreateResponses[keyof ProjectsCreateResponses];

export type ProjectsDestroyData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/v1/projects/{uuid}/';
};

export type ProjectsDestroyResponses = {
    /**
     * No response body
     */
    204: void;
};

export type ProjectsDestroyResponse = ProjectsDestroyResponses[keyof ProjectsDestroyResponses];

export type ProjectsRetrieveData = {
    body?: never;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/v1/projects/{uuid}/';
};

export type ProjectsRetrieveResponses = {
    200: Project;
};

export type ProjectsRetrieveResponse = ProjectsRetrieveResponses[keyof ProjectsRetrieveResponses];

export type ProjectsPartialUpdateData = {
    body?: PatchedProjectRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/v1/projects/{uuid}/';
};

export type ProjectsPartialUpdateResponses = {
    200: Project;
};

export type ProjectsPartialUpdateResponse = ProjectsPartialUpdateResponses[keyof ProjectsPartialUpdateResponses];

export type ProjectsUpdateData = {
    body: ProjectRequest;
    path: {
        uuid: string;
    };
    query?: never;
    url: '/api/v1/projects/{uuid}/';
};

export type ProjectsUpdateResponses = {
    200: Project;
};

export type ProjectsUpdateResponse = ProjectsUpdateResponses[keyof ProjectsUpdateResponses];
