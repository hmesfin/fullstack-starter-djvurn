openapi: 3.0.3
info:
  title: Fullstack Reference API
  version: 1.0.0
  description: API with full TypeScript type generation
paths:
  /api/auth-token/:
    post:
      operationId: api_auth_token_create
      tags:
      - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/projects/:
    get:
      operationId: projects_list
      description: Returns a paginated list of projects owned by the current user
      summary: List all projects for the authenticated user
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
          enum:
          - active
          - archived
          - completed
          - draft
        description: Filter by project status
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: projects_create
      description: |-
        ViewSet for managing projects.

        All endpoints require authentication.
        Projects are filtered to show only those owned by the current user.
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectCreateRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectCreate'
          description: ''
  /api/v1/projects/{uuid}/:
    get:
      operationId: projects_retrieve
      description: |-
        ViewSet for managing projects.

        All endpoints require authentication.
        Projects are filtered to show only those owned by the current user.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: projects_update
      description: |-
        ViewSet for managing projects.

        All endpoints require authentication.
        Projects are filtered to show only those owned by the current user.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: projects_partial_update
      description: |-
        ViewSet for managing projects.

        All endpoints require authentication.
        Projects are filtered to show only those owned by the current user.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProjectRequest'
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: projects_destroy
      description: |-
        ViewSet for managing projects.

        All endpoints require authentication.
        Projects are filtered to show only those owned by the current user.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
        required: true
      tags:
      - projects
      security:
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    PatchedProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
    PatchedUserRequest:
      type: object
      properties:
        name:
          type: string
          title: Name of User
          maxLength: 255
    PriorityEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - Low
        * `2` - Medium
        * `3` - High
        * `4` - Critical
    Project:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        owner:
          type: integer
          readOnly: true
        owner_email:
          type: string
          format: email
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        is_overdue:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - is_overdue
      - name
      - owner
      - owner_email
      - updated_at
      - uuid
    ProjectCreate:
      type: object
      description: Separate serializer for creation to handle owner assignment
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        description:
          type: string
        owner:
          type: integer
          readOnly: true
        owner_email:
          type: string
          format: email
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        is_overdue:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - is_overdue
      - name
      - owner
      - owner_email
      - updated_at
      - uuid
    ProjectCreateRequest:
      type: object
      description: Separate serializer for creation to handle owner assignment
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
      required:
      - name
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
      required:
      - name
    StatusEnum:
      enum:
      - draft
      - active
      - completed
      - archived
      type: string
      description: |-
        * `draft` - Draft
        * `active` - Active
        * `completed` - Completed
        * `archived` - Archived
    User:
      type: object
      properties:
        name:
          type: string
          title: Name of User
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - url
    UserRequest:
      type: object
      properties:
        name:
          type: string
          title: Name of User
          maxLength: 255
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
